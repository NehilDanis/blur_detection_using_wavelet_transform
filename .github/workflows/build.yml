name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Only needed if running a Python script

    - name: Install python dependencies
      run: |
        pip install -r ${{github.workspace}}/requirements.txt

    - name: Run conan install 
      run: conan profile detect && conan install . -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True -sbuild_type=Release -of=conan --build=missing

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/conan/build/Release/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release -B ${{github.workspace}}/build/release -S .

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build/release -j4